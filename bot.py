from telegram import Bot
from telegram import Update
from telegram import ParseMode
from telegram import InlineKeyboardButton
from telegram import InlineKeyboardMarkup
from telegram import ReplyKeyboardRemove
from telegram.ext import CallbackContext
from telegram.ext import Updater
from telegram.ext import CommandHandler
from telegram.ext import MessageHandler
from telegram.ext import Filters
from telegram.ext import CallbackQueryHandler
from telegram.utils.request import Request
from telegram import KeyboardButton
from telegram import ReplyKeyboardMarkup
import csv, io, datetime
import sys
import io

sys.stdout = io.open(sys.stdout.fileno(), 'w', encoding='utf8')

import table
print ("Begining work...")

table.createTables()

channel_chat_id = 111 #main

consts = {
    "expectedDate":"25/12/2021 23:59"

}

BUTTON_INLINE_START = "button_inline_start"
BUTTON_INLINE_QUESTION1_1 = "button_inline_question1_1"
BUTTON_INLINE_QUESTION1_2 = "button_inline_question1_2"
BUTTON_INLINE_QUESTION1_3 = "button_inline_question1_3"
BUTTON_INLINE_QUESTION1_4 = "button_inline_question1_4"

BUTTON_INLINE_QUESTION2_1 = "button_inline_question2_1"
BUTTON_INLINE_QUESTION2_2 = "button_inline_question2_2"
BUTTON_INLINE_QUESTION2_3 = "button_inline_question2_3"
BUTTON_INLINE_QUESTION2_4 = "button_inline_question2_3"

BUTTON_INLINE_QUESTION3_1 = "button_inline_question3_1"
BUTTON_INLINE_QUESTION3_2 = "button_inline_question3_2"
BUTTON_INLINE_QUESTION3_3 = "button_inline_question3_3"
BUTTON_INLINE_QUESTION3_4 = "button_inline_question3_4"

BUTTON_INLINE_QUESTION4_1 = "button_inline_question4_1"
BUTTON_INLINE_QUESTION4_2 = "button_inline_question4_2"
BUTTON_INLINE_QUESTION4_3 = "button_inline_question4_3"
BUTTON_INLINE_QUESTION4_4 = "button_inline_question4_4"

BUTTON_INLINE_QUESTION5_1 = "button_inline_question5_1"
BUTTON_INLINE_QUESTION5_2 = "button_inline_question5_2"
BUTTON_INLINE_QUESTION5_3 = "button_inline_question5_3"
BUTTON_INLINE_QUESTION5_4 = "button_inline_question5_4"

BUTTON_INLINE_QUESTION6_1 = "button_inline_question6_1"
BUTTON_INLINE_QUESTION6_2 = "button_inline_question6_2"
BUTTON_INLINE_QUESTION6_3 = "button_inline_question6_3"
BUTTON_INLINE_QUESTION6_4 = "button_inline_question6_4"

BUTTON_INLINE_QUESTION7_1 = "button_inline_question7_1"
BUTTON_INLINE_QUESTION7_2 = "button_inline_question7_2"
BUTTON_INLINE_QUESTION7_3 = "button_inline_question7_3"
BUTTON_INLINE_QUESTION7_4 = "button_inline_question7_4"

BUTTON_INLINE_QUESTION8_1 = "button_inline_question8_1"
BUTTON_INLINE_QUESTION8_2 = "button_inline_question8_2"
BUTTON_INLINE_QUESTION8_3 = "button_inline_question8_3"
BUTTON_INLINE_QUESTION8_4 = "button_inline_question8_4"

BUTTON_INLINE_QUESTION9_1 = "button_inline_question9_1"
BUTTON_INLINE_QUESTION9_2 = "button_inline_question9_2"
BUTTON_INLINE_QUESTION9_3 = "button_inline_question9_3"
BUTTON_INLINE_QUESTION9_4 = "button_inline_question9_4"

BUTTON_INLINE_QUESTION10_1 = "button_inline_question10_1"
BUTTON_INLINE_QUESTION10_2 = "button_inline_question10_2"
BUTTON_INLINE_QUESTION10_3 = "button_inline_question10_3"
BUTTON_INLINE_QUESTION10_4 = "button_inline_question10_4"

#–ö–Ω–æ–ø–∫–∏ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º#
def get_base_inline_keyboard_start():
    keyboard = [
        [
            InlineKeyboardButton("–ù–∞—á–∏–Ω–∞–µ–º! üéì", callback_data=BUTTON_INLINE_START),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question1():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION1_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION1_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION1_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION1_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question2():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION2_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION2_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION2_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION2_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question3():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION3_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION3_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION3_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION3_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question4():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION4_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION4_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION4_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION4_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question5():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION5_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION5_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION5_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION5_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question6():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION6_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION6_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION6_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION6_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question7():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION7_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION7_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION7_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION7_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question8():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION8_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION8_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION8_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION8_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question9():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION9_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION9_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION9_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION9_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

def get_base_inline_keyboard_question10():
    keyboard = [
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 1", callback_data=BUTTON_INLINE_QUESTION10_1),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 2", callback_data=BUTTON_INLINE_QUESTION10_2),
        ],
        [
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 3", callback_data=BUTTON_INLINE_QUESTION10_3),
            InlineKeyboardButton("–û—Ç–≤–µ—Ç 4", callback_data=BUTTON_INLINE_QUESTION10_4),
        ],
    ]
    return InlineKeyboardMarkup(keyboard)

#–ù–∏–∂–Ω–∏–µ –∫–Ω–æ–ø–∫–∏#
def get_base_reply_keyboard():
    keyboard = [
        [
            KeyboardButton("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
        ],
    ]
    return ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
    )

#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –í–°–ï–• –∫–Ω–æ–ø–æ–∫ —Å–æ –í–°–ï–• –∫–ª–∞–≤–∏–∞—Ç—É—Ä#
def keyboard_callback_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    data = query.data
    chat_id = update.effective_message.chat_id

    try :
        isDone = table.getStatus(chat_id) == "Successful"
    except:
        isDone = False

    if (expectedDate()):
        context.bot.send_message(
            chat_id = chat_id,
            text="–ö–æ–Ω–∫—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω",
            parse_mode=ParseMode.HTML
        )
        return

    if isDone:
        ball = table.getTotal(chat_id)
        context.bot.send_message(
            chat_id = chat_id,
            text=winMessage(ball),
            parse_mode=ParseMode.HTML
        )

    elif data == BUTTON_INLINE_START: #–ù–∞—á–∏–Ω–∞–µ–º! üéì
        context.bot.edit_message_text(
            chat_id=chat_id,
            text=query.message.text,
            parse_mode=ParseMode.MARKDOWN,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 1</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –Ω–æ–≤–æ–≥–æ–¥–Ω–∏–π —Ñ–∏–ª—å–º <b>(1 –±–∞–ª–ª)</b>\n',
                'üè¢‚úàÔ∏èüè¢üõÅüë©‚Äç‚ù§Ô∏è‚Äçüë®\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –û—Ç–ø—É—Å–∫ –ø–æ –æ–±–º–µ–Ω—É',
                '2. –ò—Ä–æ–Ω–∏—è —Å—É–¥—å–±—ã, –∏–ª–∏ –° –ª—ë–≥–∫–∏–º –ø–∞—Ä–æ–º',
                '3. –û–¥–∏–Ω –¥–æ–º–∞',
                '4. –£–ª–µ—Ç–µ–ª–∏, –ø—Ä–∏–ª–µ—Ç–µ–ª–∏, –ø–æ–º—ã–ª–∏—Å—å, –≤–ª—é–±–∏–ª–∏—Å—å',]
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question1()
        )

    elif data in [BUTTON_INLINE_QUESTION1_1, BUTTON_INLINE_QUESTION1_2,BUTTON_INLINE_QUESTION1_3,BUTTON_INLINE_QUESTION1_4]: #–≤–æ–ø—Ä–æ—Å 2
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ò—Ä–æ–Ω–∏—è —Å—É–¥—å–±—ã, –∏–ª–∏ –° –ª—ë–≥–∫–∏–º –ø–∞—Ä–æ–º</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 2</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ–¥–Ω—é—é –ø–µ—Å–Ω—é <b>(1 –±–∞–ª–ª)</b>\n',
                '‚ùå‚ùÑÔ∏èüè¢üè¢üè¢üèò‚ùåüòÉüëçüèª\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ü–æ—Ç–æ–ª–æ–∫ –ª–µ–¥—è–Ω–æ–π, –¥–≤–µ—Ä—å —Å–∫—Ä–∏–ø—É—á–∞—è',
                '2. –ó–∞–º–µ—Ç–∞–µ—Ç –∑–∏–º–∞',
                '3. –ö–∞–±—ã –Ω–µ –±—ã–ª–æ –∑–∏–º—ã –≤ –≥–æ—Ä–æ–¥–∞—Ö –∏ —Å—ë–ª–∞—Ö',
                '4. –ó–∏–º–æ–π –≤ –ù–æ—Ä–∏–ª—å—Å–∫–µ —Ö–æ—Ä–æ—à–æ, –Ω—É –∞ –≤ –°–æ—á–∏ –ª-—É-—É-—á—à–µ',]
        if data == BUTTON_INLINE_QUESTION1_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "1", 1)
        if data != BUTTON_INLINE_QUESTION1_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question2()
        )

    elif data in [BUTTON_INLINE_QUESTION2_1,BUTTON_INLINE_QUESTION2_2,BUTTON_INLINE_QUESTION2_3,BUTTON_INLINE_QUESTION2_4]: #–≤–æ–ø—Ä–æ—Å 3
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ö–∞–±—ã –Ω–µ –±—ã–ª–æ –∑–∏–º—ã –≤ –≥–æ—Ä–æ–¥–∞—Ö –∏ —Å–µ–ª–∞—Ö</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 3</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ –ø–æ—Å–ª–æ–≤–∏—Ü—É <b>(1 –±–∞–ª–ª)</b>\n',
                'üê∂‚ô•Ô∏èüè†üêØ\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –¢–∏–≥—Ä –±–µ—Ä–µ–∂—ë—Ç —Å–≤–æ—é —à–∫—É—Ä—É, –∞ —á–µ–ª–æ–≤–µ–∫ ‚Äì –∏–º—è',
                '2. –ù–∞ —Å–≤–æ–µ–π —É–ª–∏—Ü–µ, –∏ —Å–æ–±–∞–∫–∞ ‚Äì —Ç–∏–≥—Ä',
                '3. –õ—é–±–∏ —Å–≤–æ–π –¥–æ–º, –∫–∞–∫ —Ç–∏–≥—Ä–∞ —Å —Å–æ–±–∞–∫–æ–π',
                '4. –°–æ–±–∞–∫–∞ –≤ –¥–æ–º–µ, –∫–∞–∫ —Ç–∏–≥—Ä –Ω–∞ –≤–æ–ª–µ',]
        if data == BUTTON_INLINE_QUESTION2_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "2", 1)
        if data != BUTTON_INLINE_QUESTION2_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question3()
        )

    elif data in [BUTTON_INLINE_QUESTION3_1,BUTTON_INLINE_QUESTION3_2,BUTTON_INLINE_QUESTION3_3,BUTTON_INLINE_QUESTION3_4]: #–≤–æ–ø—Ä–æ—Å 4
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ù–∞ —Å–≤–æ–µ–π —É–ª–∏—Ü–µ, –∏ —Å–æ–±–∞–∫–∞ ‚Äì —Ç–∏–≥—Ä</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 4</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ –º—É–ª—å—Ç—Ñ–∏–ª—å–º <b>(3 –±–∞–ª–ª–∞)</b>\n',
                'üë¶üèªüéÑüöãüí®üåå \n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ü–æ–ª—è—Ä–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å',
                '2. –ü–æ–µ–∑–¥ –≤ –†–æ–∂–¥–µ—Å—Ç–≤–æ',
                '3. –ù–æ–≤–æ–≥–æ–¥–Ω–∏–π —ç–∫—Å–ø—Ä–µ—Å—Å',
                '4. –ü–æ–≥–æ–Ω—è –∑–∞ –ù–æ–≤—ã–º –≥–æ–¥–æ–º',]
        if data == BUTTON_INLINE_QUESTION3_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "3", 1)
        if data != BUTTON_INLINE_QUESTION3_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question4()
        )

    elif data in [BUTTON_INLINE_QUESTION4_1,BUTTON_INLINE_QUESTION4_2,BUTTON_INLINE_QUESTION4_3,BUTTON_INLINE_QUESTION4_4]: #–≤–æ–ø—Ä–æ—Å 5
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ü–æ–ª—è—Ä–Ω—ã–π —ç–∫—Å–ø—Ä–µ—Å—Å</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 5</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ —Ñ–∏–ª—å–º <b>(3 –±–∞–ª–ª–∞)</b>\n',
                'üè´üë∫üë©‚Äç‚ù§Ô∏è‚Äçüë®üï∞üîÆüëÑÔ∏è\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ì—Ä–∏–Ω—á - –ø–æ—Ö–∏—Ç–∏—Ç–µ–ª—å –†–æ–∂–¥–µ—Å—Ç–≤–∞',
                '2. –ß–∞—Ä–æ–¥–µ–∏',
                '3. –ù–æ–≤–æ–≥–æ–¥–Ω—è—è –º–∞–≥–∏—è',
                '4. –ù–µ—É–¥–µ—Ä–∂–∏–º—ã–µ 3',]
        if data == BUTTON_INLINE_QUESTION4_1:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "4", 3)
        if data != BUTTON_INLINE_QUESTION4_1:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question5()
        )

    elif data in [BUTTON_INLINE_QUESTION5_1,BUTTON_INLINE_QUESTION5_2,BUTTON_INLINE_QUESTION5_3,BUTTON_INLINE_QUESTION5_4]: #–≤–æ–ø—Ä–æ—Å 6
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ß–∞—Ä–æ–¥–µ–∏</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 6</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ —Å–∫–∞–∑–∫—É <b>(3 –±–∞–ª–ª–∞)</b>\n',
                'üêªüë∏üèºü§°‚ùÑÔ∏èüå≤üéÖüèª\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ö–æ–≥–¥–∞ –∑–∞–∂–∏–≥–∞—é—Ç—Å—è —ë–ª–∫–∏',
                '2. –°–Ω–µ–≥—É—Ä–æ—á–∫–∞',
                '3. –ú–æ—Ä–æ–∑–∫–æ',
                '4. –ü—Ä–∏–Ω—Ü–µ—Å—Å–∞ –≤ —Ü–∏—Ä–∫–µ',]
        if data == BUTTON_INLINE_QUESTION5_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "5", 3)
        if data != BUTTON_INLINE_QUESTION5_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question6()
        )

    elif data in [BUTTON_INLINE_QUESTION6_1,BUTTON_INLINE_QUESTION6_2,BUTTON_INLINE_QUESTION6_3,BUTTON_INLINE_QUESTION6_4]: #–≤–æ–ø—Ä–æ—Å 7
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ú–æ—Ä–æ–∑–∫–æ</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 7</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ —Ñ–∏–ª—å–º <b>(5 –±–∞–ª–ª–æ–≤)</b>\n',
                'üëßüèº‚úâÔ∏èü§π‚Äç‚ôÇÔ∏èüë®‚ÄçüöÄüë®üèª‚Äçüç≥üéÖüèª\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ë–µ–¥–Ω–∞—è –°–∞—à–∞',
                '2. –°–∏—Ä–æ—Ç–∞ –∫–∞–∑–∞–Ω—Å–∫–∞—è',
                '3. –ö–æ—Ä–æ–ª–µ–≤–∞ –ª—å–¥–∞',
                '4. –ò–Ω—Ç–µ—Ä—Å—Ç–µ–ª–ª–∞—Ä',]
        if data == BUTTON_INLINE_QUESTION6_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "6", 3)
        if data != BUTTON_INLINE_QUESTION6_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question7()
        )

    elif data in [BUTTON_INLINE_QUESTION7_1,BUTTON_INLINE_QUESTION7_2,BUTTON_INLINE_QUESTION7_3,BUTTON_INLINE_QUESTION7_4]: #–≤–æ–ø—Ä–æ—Å 8
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–°–∏—Ä–æ—Ç–∞ –∫–∞–∑–∞–Ω—Å–∫–∞—è</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 8</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ –∫–Ω–∏–≥—É <b>(5 –±–∞–ª–ª–æ–≤)</b>\n',
                'üëπ ‚ú®üååüåôüë©üèª‚ù§Ô∏èüë†üë®üèª\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –î—å—è–≤–æ–ª –Ω–æ—Å–∏—Ç Prada',
                '2. –ó–æ–ª—É—à–∫–∞',
                '3. –ù–æ—á—å –ø–µ—Ä–µ–¥ –†–æ–∂–¥–µ—Å—Ç–≤–æ–º',
                '4. –ß–µ—Ä—Ç–æ–≤—Å–∫–∞—è –Ω–æ—á—å',]
        if data == BUTTON_INLINE_QUESTION7_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "7", 5)
        if data != BUTTON_INLINE_QUESTION7_2:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question8()
        )

    elif data in [BUTTON_INLINE_QUESTION8_1,BUTTON_INLINE_QUESTION8_2,BUTTON_INLINE_QUESTION8_3,BUTTON_INLINE_QUESTION8_4]: #–í–æ–ø—Ä–æ—Å 9
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ù–æ—á—å –ø–µ—Ä–µ–¥ –†–æ–∂–¥–µ—Å—Ç–≤–æ–º</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 9</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ —Ñ–∏–ª—å–º <b>(5 –±–∞–ª–ª–æ–≤)</b>\n',
                'üéÖüèªüç∑üö¨üöìüë¶üèªüôèüèª\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –û–¥–∏–Ω –¥–æ–º–∞ 2',
                '2. –ö—Ä–æ–≤–∞–≤—ã–π –°–∞–Ω—Ç–∞',
                '3. –ü–ª–æ—Ö–æ–π –°–∞–Ω—Ç–∞',
                '4. –ü—Ä–æ—Å—Ç–æ —É–∂–∞—Å–Ω—ã–π –°–∞–Ω—Ç–∞',]
        if data == BUTTON_INLINE_QUESTION8_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "8", 5)
        if data != BUTTON_INLINE_QUESTION8_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question9()
        )

    elif data in [BUTTON_INLINE_QUESTION9_1,BUTTON_INLINE_QUESTION9_2,BUTTON_INLINE_QUESTION9_3,BUTTON_INLINE_QUESTION9_4]: #–í–æ–ø—Ä–æ—Å 10
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ü–ª–æ—Ö–æ–π –°–∞–Ω—Ç–∞</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )
        text = ['<b>–í–æ–ø—Ä–æ—Å 10</b>',
                '–û—Ç–≥–∞–¥–∞–π—Ç–µ —Ñ–∏–ª—å–º <b>(5 –±–∞–ª–ª–æ–≤)</b>\n',
                'üë©üèªüéÑüß§üíñ\n',
                '–í–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤:',
                '1. –ò–Ω—Ç—É–∏—Ü–∏—è',
                '2. –†–æ–∂–¥–µ—Å—Ç–≤–µ–Ω—Å–∫–∞—è —è—Ä–º–∞—Ä–∫–∞',
                '3. –í—Å—Ç—Ä–µ—á–∞',
                '4. –†–æ–∂–¥–µ—Å—Ç–≤–æ –Ω–∞ –¥–≤–æ–∏—Ö',]
        if data == BUTTON_INLINE_QUESTION9_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "9", 5)
        if data != BUTTON_INLINE_QUESTION9_3:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)
        context.bot.send_message(
            chat_id=chat_id,
            text='\n'.join(text),
            parse_mode=ParseMode.HTML,
            reply_markup=get_base_inline_keyboard_question10()
        )

    elif data in [BUTTON_INLINE_QUESTION10_1,BUTTON_INLINE_QUESTION10_2,BUTTON_INLINE_QUESTION10_3,BUTTON_INLINE_QUESTION10_4]: #–§–ò–ù–ê–õ
        context.bot.edit_message_text(
            chat_id=chat_id,
            text="%s\n\n<b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:</b>\n<i>–ò–Ω—Ç—É–∏—Ü–∏—è</i>"%(query.message.text),
            parse_mode=ParseMode.HTML,
            message_id=query.message.message_id
        )

        if data == BUTTON_INLINE_QUESTION10_1:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ ü•≥", show_alert=True)
            table.setQuestion(chat_id, "10", 5)
        if data != BUTTON_INLINE_QUESTION10_1:
            context.bot.answer_callback_query(callback_query_id=query.id, text="–í—ã –Ω–µ–≤–µ—Ä–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ üò•", show_alert=True)

        sum = int(table.getSum(chat_id))
        table.setTotal(chat_id, sum)
        ball = table.getTotal(chat_id)
        text = winMessage(ball)
        table.setStatus(chat_id)

        context.bot.send_message(
            chat_id=chat_id,
            text=text,
            parse_mode=ParseMode.HTML
        )

        userInfo = "–£—á–∞—Å—Ç–Ω–∏–∫ Id: %d\n–õ–æ–≥–∏–Ω: %s\n–ò–º—è: %s %s\n–í—Å–µ–≥–æ –Ω–∞–±—Ä–∞–Ω–æ –æ—á–∫–æ–≤: %d\n"%(chat_id, str(update.effective_user.username),str(update.effective_user.first_name), str(update.effective_user.last_name), table.getTotal(chat_id))
        context.bot.send_message(
            chat_id = channel_chat_id,
            text=userInfo,
            parse_mode=ParseMode.HTML
        )

def do_start(update: Update, context: CallbackContext):
    chat_id = update.effective_message.chat_id
    try :
        isAwaiting = table.getStatus(chat_id) == "Awaiting"
        isDone = table.getStatus(chat_id) == "Successful"
    except:
        isAwaiting = False
        isDone = False

    table.setParticipant(chat_id)
    if (expectedDate()):
        context.bot.send_message(
            chat_id = chat_id,
            text="–†–æ–∑—ã–≥—Ä—ã—à —Å–æ—Å—Ç–æ—è–ª—Å—è! –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ",
            parse_mode=ParseMode.HTML
        )
        return

    if isDone:
        ball = table.getTotal(chat_id)
        context.bot.send_message(
            chat_id = chat_id,
            text=winMessage(ball),
            parse_mode=ParseMode.HTML
        )
        return

    if isAwaiting:
        context.bot.send_message(
            chat_id = chat_id,
            text="–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã",
            parse_mode=ParseMode.HTML
        )
        return

    text = [
        '<a href="https://thumb.cloud.mail.ru/weblink/thumb/xw1/XUpR/Z5qJFUXDK">&#8205;</a>',
        '–û—Ç–≤–µ—á–∞–π—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–ª—É—á–∞–π—Ç–µ –±–∞–ª–ª—ã –∑–∞ –∫–∞–∂–¥—ã–π –æ—Ç–≤–µ—Ç –∏ –≤—ã–∏–≥—Ä—ã–≤–∞–π—Ç–µ –ø–æ–¥–∞—Ä–∫–∏ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ ¬´–ú—É–ª—å—Ç–∏–±–æ–Ω—É—Å–∞¬ª.\n',
        'üîπ —Å—É–ø–µ—Ä–ø—Ä–∏–∑—ã, –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ –±–æ–ª–µ–µ 20-—Ç–∏ –±–∞–ª–ª–æ–≤;\n',
        'üîπ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø—Ä–∏–∑—ã, –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ –¥–æ 20 –±–∞–ª–ª–æ–≤;\n',
        'üîπ –ø–æ–æ—â—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–∏–∑—ã, –µ—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ –¥–æ 10 –±–∞–ª–ª–æ–≤.\n',
        '–£–¥–∞—á–∏!'

    ]
    # info = [
    #     'üîπ –±–æ–ª–µ–µ 20-—Ç–∏ –±–∞–ª–ª–æ–≤ ‚Äî —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ —Å—É–ø–µ—Ä–ø—Ä–∏–∑–æ–≤ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã;\n',
    #     'üîπ –¥–æ 20 –±–∞–ª–ª–æ–≤ ‚Äî —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤ –æ—Ç –ø–∞—Ä—Ç–Ω–µ—Ä–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã;\n',
    #     'üîπ –¥–æ 10 –±–∞–ª–ª–æ–≤ ‚Äî —É—á–∞—Å—Ç–≤—É–µ—Ç–µ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–æ–≤ –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n'
    # ]
    # update.message.reply_text(
    #     text='\n'.join(text),
    #     parse_mode=ParseMode.HTML,
    #     disable_web_page_preview=False
    # )
    # context.bot.send_message(
    #     chat_id = update.message.chat_id,
    #     text='\n'.join(info),
    #     parse_mode=ParseMode.HTML,
    #     reply_markup=get_base_inline_keyboard_start(),
    # )
    update.message.reply_text(
        chat_id = update.message.chat_id,
        text='\n'.join(text),
        parse_mode=ParseMode.HTML,
        reply_markup=get_base_inline_keyboard_start(),
    )

def do_echo(update: Update, context: CallbackContext):
    text = update.message.text
    creator = update.message.chat.id
    try :
        isDone = table.getStatus(creator) == "Successful"
    except:
        isDone = False

    if creator == channel_chat_id:

        resultMassage = list(text.split("\n"))
        #print(resultMassage)
        notifySend = "SendWiners:"

        if resultMassage[0].find(notifySend) != -1:
            notify(text, context, notifySend, creator)
        if text == "Admin menu":
            context.bot.send_message(
                chat_id = creator,
                text='<b>–ê–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é –¥–æ–±–∞–≤–ª–µ–Ω–æ</b>',
                parse_mode=ParseMode.HTML,
                reply_markup=get_base_reply_keyboard()
            )
        if text == "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö":
            try:
                # col_name = ['Id','Reporter', 'Status', 'Total', 'Question 1', 'Question 2', 'Question 3', 'Question 4', 'Question 5', 'Question 6', 'Question 7', 'Question 8', 'Question 9', 'Question 10']
                # requestParticipants.extend(table.getAllData())
                requestParticipants = table.getAllData()

                s = io.StringIO()
                csv.writer(s).writerows(requestParticipants)
                s.seek(0)

                buf = io.BytesIO()

                buf.write(s.getvalue().encode())
                buf.seek(0)

                buf.name = 'report_from_database.csv'

                context.bot.send_document(
                    chat_id=creator,
                    document=buf
                )

            except:
                context.bot.send_message(
                    chat_id = creator,
                    text="–ï—â–µ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤",
                    parse_mode=ParseMode.HTML
                )
        return

    if isDone:
        ball = table.getTotal(creator)
        context.bot.send_message(
            chat_id = creator,
            text=winMessage(ball),
            parse_mode=ParseMode.HTML
        )

def winMessage(ball):
    # print (type(ball))
    if ball < 1:
        return ("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∏ –Ω–∞ –æ–¥–∏–Ω –∏–∑ –≤–æ–ø—Ä–æ—Å–æ–≤")
    if ball > 0 and  ball <= 10:
        return ("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ %d –±–∞–ª–ª–æ–≤. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞ ‚Äî  c–∫–∏–¥–∫–∞ –¥–æ 40%% –Ω–∞ —Å–µ—Ä–≤–∏—Å–Ω—ã–π —Å–±–æ—Ä –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ."%(ball))
    if ball > 10 and  ball <= 20:
        return ("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ %d –±–∞–ª–ª–æ–≤. –í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞  ‚Äî  –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ 45 –¥–Ω–µ–π –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ."%(ball))
    if ball > 20:
        return ("–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –Ω–∞–±—Ä–∞–ª–∏ %d –±–∞–ª–ª–æ–≤. –í–∞–º –ø–æ–¥–∞—Ä–æ–∫ –æ—Ç –ø–∞—Ä—Ç–Ω—ë—Ä–∞  ‚Äì –±–µ—Å–ø–ª–∞—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–µ—Ä–≤–∏—Å –Ω–∞ 90 –¥–Ω–µ–π –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –ø–æ –ø—Ä–æ–º–æ–∫–æ–¥—É ."%(ball))

def notify(massage, context, secret, creator):

    listUsers = massage.replace(secret, '')
    rows = list(listUsers.split("\n"))
    for row in rows:
        try:
            if row == "":
                continue
            context.bot.send_message(
                chat_id = row,
                text="–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ —Å—É–ø–µ—Ä-–ø—Ä–∏–∑! –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± —ç—Ç–æ–º –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ ",
                parse_mode=ParseMode.HTML,
            )
            context.bot.send_message(
                chat_id = creator,
                text="%s - Success"%(row),
                parse_mode=ParseMode.HTML
            )
        except:
            context.bot.send_message(
                chat_id = creator,
                text="%s - Failed"%(row),
                parse_mode=ParseMode.HTML
            )

def expectedDate():
    CurrentDate = datetime.datetime.now()

    ExpectedDate = consts["expectedDate"]
    ExpectedDate = datetime.datetime.strptime(ExpectedDate, "%d/%m/%Y %H:%M")

    if CurrentDate > ExpectedDate:
        return True
    else:
        return False

def main():

    req = Request(
        connect_timeout=0.5,
        read_timeout=1.0,
    )
    bot = Bot(
        token='',
        request=req,
    )
    updater = Updater(
        bot=bot,
        use_context=True,
    )


    # –ù–∞–≤–µ—Å–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    start_handler = CommandHandler("start", do_start)
    message_handler = MessageHandler(Filters.text, do_echo)
    buttons_handler = CallbackQueryHandler(callback=keyboard_callback_handler)

    updater.dispatcher.add_handler(start_handler)
    updater.dispatcher.add_handler(message_handler)
    updater.dispatcher.add_handler(buttons_handler)

    # –ù–∞—á–∞—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    updater.start_polling()
    updater.idle()

    print ("Finished work...")

if __name__ == '__main__':
    main()
